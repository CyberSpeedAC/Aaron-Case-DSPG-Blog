[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Aaron Case DSPG Blog",
    "section": "",
    "text": "Week One Blog\n\n\n\n\n\n\n\n\n\n\n\n\nMay 23, 2023\n\n\nAaron Case\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek Two\n\n\n\n\n\n\n\nWeek Two\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nMay 23, 2023\n\n\nAaron Case\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 23, 2023\n\n\nAaron Case\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMay 20, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Aaron_C_Week_One/Aaron_C_Week_One.html",
    "href": "posts/Aaron_C_Week_One/Aaron_C_Week_One.html",
    "title": "Week One Blog",
    "section": "",
    "text": "Week One\nWeek goal is to learn and debriefing"
  },
  {
    "objectID": "posts/Aaron_C_Week_Two/Aaron_C_Week_Two.html",
    "href": "posts/Aaron_C_Week_Two/Aaron_C_Week_Two.html",
    "title": "Week Two",
    "section": "",
    "text": "#Imports for both Graph and Map\n\nlibrary(tidycensus)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(magrittr)\n\n\nAttaching package: 'magrittr'\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\nlibrary(dplyr)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(ggiraph)\nlibrary(htmlwidgets)\nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(mapview)\nlibrary(plotly)\nlibrary(viridisLite)\nlibrary(sf) \n\nLinking to GEOS 3.11.2, GDAL 3.6.2, PROJ 9.2.0; sf_use_s2() is TRUE\n\nsf_use_s2(FALSE) # Removing water on map\n\nSpherical geometry (s2) switched off\n\noptions(tigris_use_cache = TRUE)\n\n#Grabing median_income for bar blot\nmedian_income <- get_acs(\n  geography = \"county\",\n  variables = \"B19013_001\",\n  state = \"IA\", \n  year = 2021\n)\n\nGetting data from the 2017-2021 5-year ACS\n\n#View the mid range of countys mean income\nmedian_income_data <- median_income %>%\n  #ordering from estimate highest to estimate lowest\n  arrange(desc(estimate)) %>%\n  #reducing the number of countys the graph can display\n  slice(floor(99 * 0.25):floor(99 * 0.75)+1)\n\n#The Bar plot\nmd_plot_ggiraph <- ggplot(median_income_data, aes(x = estimate, \n                                    y = reorder(NAME, estimate),\n                                    tooltip = estimate,\n                                    data_id = GEOID)) +\n  #Generating the error bars\n  geom_errorbar(aes(xmin = estimate - moe, \n                    xmax = estimate + moe),\n                    width = 0.5, \n                    size = 1) + \n  #Coloring the estimate dot \n  geom_point_interactive(color = \"darkblue\", size = 1.5) +\n  #Bottom Label range\n  scale_x_continuous(labels = label_dollar()) + \n  #County names and removing the Unnecessary words\n  scale_y_discrete(labels = function(x) str_remove(x, \" County, Iowa|, Iowa\")) +\n  #Graph labeling for views convince \n  labs(title = \"Median Income 2021 ACS\",\n       #subtitle = \"Counties in Iowa\",\n       caption = \"Data acquired with R and tidycensus. \\nError bars represent margin of error around estimates of Median income.\",\n       x = \"ACS Estimate Mean Income\",\n       y = \"Counties in Iowa\") + \n  #Text Sizing\n  theme_minimal(base_size = 8)\n#Making the graph interactive\ngirafe(ggobj = md_plot_ggiraph) %>% girafe_options(opts_hover(css = \"fill:purple;\"))\n\n\n\n\n#The Map\nmedian_income_map <- get_acs(\n  geography = \"tract\",\n  variables = \"B19013_001\",\n  state = \"IA\",\n  year = 2021,\n  geometry = TRUE\n)\n\nGetting data from the 2017-2021 5-year ACS\n\n# The Map\nmd_Map <- ggplot(median_income_map, aes(fill = estimate)) + \n  #The map display\n  geom_sf() + \n  #Empty theme of the map\n  theme_void() + \n  #Colors the map \n  scale_fill_viridis_c(option = \"G\", n.breaks = 10) + \n  #Information\n  labs(title = \"Median Income ACS Census tract\",\n       subtitle = \"\",\n       fill = \"ACS estimates\",\n       caption = \" Median Income by ACS tidycensus R package in 2021\")\n\n\nmd_plot_ggiraph\n\n\n\n\n\nmd_Map"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]